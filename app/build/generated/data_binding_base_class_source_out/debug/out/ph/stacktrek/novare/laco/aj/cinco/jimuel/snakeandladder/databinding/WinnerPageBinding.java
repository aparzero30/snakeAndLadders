// Generated by view binder compiler. Do not edit!
package ph.stacktrek.novare.laco.aj.cinco.jimuel.snakeandladder.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import ph.stacktrek.novare.laco.aj.cinco.jimuel.snakeandladder.R;

public final class WinnerPageBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppCompatButton close;

  @NonNull
  public final ImageView confetti;

  @NonNull
  public final AppCompatButton playAgain;

  @NonNull
  public final ImageView snakePhoto;

  @NonNull
  public final FrameLayout trophyFrame;

  @NonNull
  public final FrameLayout winnerFrame;

  @NonNull
  public final TextView winnerName;

  @NonNull
  public final ConstraintLayout winnerPage;

  @NonNull
  public final ImageView winnerPhoto;

  @NonNull
  public final TextView winnerText;

  private WinnerPageBinding(@NonNull ConstraintLayout rootView, @NonNull AppCompatButton close,
      @NonNull ImageView confetti, @NonNull AppCompatButton playAgain,
      @NonNull ImageView snakePhoto, @NonNull FrameLayout trophyFrame,
      @NonNull FrameLayout winnerFrame, @NonNull TextView winnerName,
      @NonNull ConstraintLayout winnerPage, @NonNull ImageView winnerPhoto,
      @NonNull TextView winnerText) {
    this.rootView = rootView;
    this.close = close;
    this.confetti = confetti;
    this.playAgain = playAgain;
    this.snakePhoto = snakePhoto;
    this.trophyFrame = trophyFrame;
    this.winnerFrame = winnerFrame;
    this.winnerName = winnerName;
    this.winnerPage = winnerPage;
    this.winnerPhoto = winnerPhoto;
    this.winnerText = winnerText;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static WinnerPageBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static WinnerPageBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.winner_page, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static WinnerPageBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.close;
      AppCompatButton close = ViewBindings.findChildViewById(rootView, id);
      if (close == null) {
        break missingId;
      }

      id = R.id.confetti;
      ImageView confetti = ViewBindings.findChildViewById(rootView, id);
      if (confetti == null) {
        break missingId;
      }

      id = R.id.play_again;
      AppCompatButton playAgain = ViewBindings.findChildViewById(rootView, id);
      if (playAgain == null) {
        break missingId;
      }

      id = R.id.snake_photo;
      ImageView snakePhoto = ViewBindings.findChildViewById(rootView, id);
      if (snakePhoto == null) {
        break missingId;
      }

      id = R.id.trophy_frame;
      FrameLayout trophyFrame = ViewBindings.findChildViewById(rootView, id);
      if (trophyFrame == null) {
        break missingId;
      }

      id = R.id.winner_frame;
      FrameLayout winnerFrame = ViewBindings.findChildViewById(rootView, id);
      if (winnerFrame == null) {
        break missingId;
      }

      id = R.id.winner_name;
      TextView winnerName = ViewBindings.findChildViewById(rootView, id);
      if (winnerName == null) {
        break missingId;
      }

      ConstraintLayout winnerPage = (ConstraintLayout) rootView;

      id = R.id.winner_photo;
      ImageView winnerPhoto = ViewBindings.findChildViewById(rootView, id);
      if (winnerPhoto == null) {
        break missingId;
      }

      id = R.id.winner_text;
      TextView winnerText = ViewBindings.findChildViewById(rootView, id);
      if (winnerText == null) {
        break missingId;
      }

      return new WinnerPageBinding((ConstraintLayout) rootView, close, confetti, playAgain,
          snakePhoto, trophyFrame, winnerFrame, winnerName, winnerPage, winnerPhoto, winnerText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
